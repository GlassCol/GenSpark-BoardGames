package com.boardgames.controller;

import com.boardgames.Main;
import com.boardgames.score.ScoreCardController;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.stage.Stage;


public class MainMenuController {

    Stage stage;
    ScoreCardController scController;

    enum ViewOption { MAIN, START_GAME, SETTINGS, EXIT }

    public MainMenuController(Stage stage) {
        this.stage = stage;

        // load the main view on start
        loadScene(ViewOption.MAIN, "stylesheet.css");
    }

    // do not need fxml view files since they are generated by code
    private void loadScene(ViewOption vOption, String style) {
        FXMLLoader fxmlLoader = new FXMLLoader();

        // set vbox container as the parent / root
        switch (vOption) {
            case MAIN, START_GAME -> fxmlLoader.setRoot(mainMenuView());
            case SETTINGS -> fxmlLoader.setRoot(settingsView());
            default -> System.exit(0);
        }

        // create a new scene with the loaded view
        Scene scene = new Scene(fxmlLoader.getRoot(), 500, 350);

        // encapsulate the scene inside the stage, i.e. add the scene to the stage
        // set stage properties
        stage.setTitle("Board Games");
        stage.setScene(scene);
        scene.getStylesheets().add(Main.class.getResource(style).toExternalForm());
        stage.show();
    }


    // VIEWS ROUTES

    // MAIN MENU VIEW

    private VBox mainMenuView() {
        // setup a main menu vbox container to hold the node elements
        VBox vBox = new VBox();
        vBox.setPadding(new Insets(20));
        vBox.setAlignment(Pos.CENTER);
        vBox.setSpacing(20);
        vBox.setPrefHeight(300);
        vBox.setPrefHeight(450);

        Font font = new Font("Engravers MT", 36);
        Label label = new Label("Main Menu");
        label.setFont(font);

        // add the node elements to the scene
        vBox.getChildren().add(label);
        vBox.getChildren().add(menuRouteButton(ViewOption.START_GAME, "Start Game",  "stylesheet.css"));
        vBox.getChildren().add(menuRouteButton(ViewOption.SETTINGS, "Settings",  "stylesheet.css"));
        vBox.getChildren().add(menuExitButton("Exit Game"));

        return vBox;
    }


    // button for handling routes
    private Button menuRouteButton(ViewOption vOption, String text, String style) {
        Button button = new Button(text);
        button.prefHeight(41);
        button.prefWidth(120);
        button.setOnAction(e -> {
            loadScene(vOption, style);
        });
        return button;
    }


    // button for exiting the game
    private Button menuExitButton(String text) {
        Button button = new Button(text);
        button.prefHeight(41);
        button.prefWidth(120);
        button.setOnAction(e -> {
            System.exit(0);
        });
        return button;
    }

    // START GAME VIEW

    private void gameView() {
        // add game view code here
    }

    // SETTINGS

    private AnchorPane settingsView() {
        AnchorPane aPane = new AnchorPane();
        aPane.prefWidth(450);
        aPane.prefHeight(300);

        Label labelPlayer = new Label("Number of players");
        labelPlayer.setLayoutX(150);
        labelPlayer.setLayoutY(100);
        
        Slider slider = new Slider(1, 2, 1);
        slider.setShowTickLabels(true);
        slider.setShowTickMarks(true);
        slider.setBlockIncrement(1);
        slider.setMajorTickUnit(1);
        slider.setValue(1);
        slider.setLayoutX(175);
        slider.setLayoutY(150);

        Label labelGamePlay = new Label("Game Being Played");
        labelGamePlay.setLayoutX(150);
        labelGamePlay.setLayoutY(200);

        ToggleGroup tGroup = new ToggleGroup();
        RadioButton rOption1 = new RadioButton("Chess");
        RadioButton rOption2 = new RadioButton("Checkers");
        rOption1.setToggleGroup(tGroup);
        rOption2.setToggleGroup(tGroup);
        rOption1.setSelected(true);

        rOption1.setLayoutX(175);
        rOption1.setLayoutY(250);
        rOption2.setLayoutX(275);
        rOption2.setLayoutY(250);


        Button button = new Button("Main");
        button.prefHeight(41);
        button.prefWidth(120);
        button.setOnAction(e -> {
            loadScene(ViewOption.MAIN, "styleSheet.css");
        });

        aPane.getChildren().add(labelPlayer);
        aPane.getChildren().add(slider);
        aPane.getChildren().add(labelGamePlay);
        aPane.getChildren().add(rOption1);
        aPane.getChildren().add(rOption2);
        aPane.getChildren().add(button);

        return aPane;

    }


}